{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTranscation.js","App.js","index.js"],"names":["Header","fetch","then","response","json","console","log","state","action","type","transactions","filter","transaction","id","payload","discount","map","isChosen","cState","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","changeDiscount","changeState","Balance","useContext","total","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","onClick","text","Math","abs","TransactionList","key","AddTranscation","useState","setText","setAmount","onSubmit","e","preventDefault","newTranscation","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.457189cf.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n\n    function componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\n        .then(response => response.json())\n        .then(json => console.log(json))\n    }\n    componentDidMount()\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state, action) => {\n    switch(action.type){\n        case 'DELETE_TRANSACTION':\n            return{\n                //spread operator\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return{\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        case 'CHANGE_DISCOUNT':\n            return{\n                ...state,\n                discount: action.payload\n            }\n            case 'CHANGE_STATE':\n                return{\n                    ...state,\n                    transaction : state.transactions.map(\n                        transaction => {           \n                            if(transaction.id === action.payload.id){\n                                transaction.isChosen = action.payload.cState;\n                                // console.log(transaction.id, transaction.isChosen);\n                            }\n                            return transaction\n                        }\n                    )\n                }\n        default:\n            return state\n    }\n}","import React, {createContext, useReducer} from 'react';\nimport AppReducer from './AppReducer';\nimport data from '../data/initialState.json';\n\n//Initial state\nconst initialState = data;\n\n//Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\n//parameter children = every thing inside <GlobalProvider></GlobalProvider>\nexport const GlobalProvider = ({children}) => {\n    //state is return object\n    //dispatch is function to trigger the state object\n    //when triggered, state and parameter in dispatch will send to AppReducer\n    //initialState no description \n    const [state, dispatch] = useReducer(AppReducer, initialState)\n    //Action\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n    function changeDiscount(discount){\n        dispatch({\n            type: 'CHANGE_DISCOUNT',\n            payload: discount\n        })\n    }\n    function changeState(id){\n        dispatch({\n            type: 'CHANGE_STATE',\n            payload: id\n        })\n    }\n    return (<GlobalContext.Provider value={\n        {\n            //set state to global content\n            transactions: state.transactions,\n            discount: state.discount,\n            deleteTransaction,\n            addTransaction,\n            changeDiscount,\n            changeState\n        }\n    }>\n        {children}\n    </GlobalContext.Provider>);\n}","import React, {useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Balance = () => {\n    const {transactions, discount}  = useContext(GlobalContext);\n    const amounts = transactions.filter(transaction => transaction.isChosen === true)\n                                .map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0)\n                        .toFixed(1);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1 >${total * (1 - discount)}</h1>\n        </>\n    )\n}\n","import React, {useContext} from 'react'\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n  const {transactions, discount} = useContext(GlobalContext)\n  const amounts = transactions.filter(transaction => transaction.isChosen === true)\n                              .map(transaction => transaction.amount);\n  const income = amounts.filter(item => item > 0)\n                        .reduce((acc,item) => (acc += item * (1-discount)), 0)\n                        .toFixed(2)\n  \n  const expense = amounts.filter(item => item < 0)\n                        .reduce((acc,item) => (acc += item* (1-discount)), 0)\n                        .toFixed(2)\n\n    return (\n        <div className=\"inc-exp-container\">\n        <div>\n          <h4>Income</h4>\n          <p className=\"money plus\">+${income}</p>\n        </div>\n        <div>\n          <h4>Expense</h4>\n          <p className=\"money minus\">-${expense}</p>\n        </div>\n      </div>\n    )\n}\n","import React, {useContext }from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\nexport const Transaction = ({transaction}) => {\n    const {discount, changeState} = useContext(GlobalContext);\n    const sign = transaction.amount < 0 ? '-' : '+';\n\n    return (\n        <li onClick={() => changeState({id : transaction.id, cState : !transaction.isChosen})}className={(transaction.amount > 0)? 'plus': 'minus'} >\n            {transaction.text}<span>{sign}${Math.abs(transaction.amount * (1 - discount))}</span>\n        </li>\n        // <li onClick={console.log(\"hi world\")} className={(transaction.amount > 0)? 'plus': 'minus'}>\n        //         {transaction.text} <span>{sign}${Math.abs(transaction.amount * (1 - discount))}</span>\n        //         <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n        // </li> \n    )\n}\n","import React ,{ useContext }from 'react';\nimport { Transaction } from './Transaction'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const TransactionList = () => {\n    const {transactions, changeDiscount} = useContext(GlobalContext);\n    return (\n        <>  <div>                \n                <h3>Books</h3>\n                <button onClick={() => changeDiscount(0)} className=\"discont-btn\">-0%</button>\n                <button onClick={() => changeDiscount(0.05)} className=\"discont-btn\">-5%</button>\n                <button onClick={() => changeDiscount(0.09)} className=\"discont-btn\">-9%</button>\n            </div>\n            <ul className=\"list\">\n                {\n                    transactions.map(transaction => (<Transaction key={transaction.id} transaction=\n                    {transaction}/>))\n                }\n            </ul>\n        </>\n    )\n}\n","import React , {useState, useContext} from 'react';\nimport {GlobalContext} from '../context/GlobalState';\n\n\nexport const AddTranscation = () => {\n    //[variable, function for change variable] = useState({initial value})\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n\n    const {addTransaction} = useContext(GlobalContext);\n\n    const onSubmit = e =>{\n        e.preventDefault();\n\n        const newTranscation = {\n            id : Math.floor(Math.random() * 100000000),\n            text,\n            amount : +amount,\n            isChosen : true\n        }\n        addTransaction(newTranscation)\n\n    }\n    return (\n        <>\n            <h3>Add custom book</h3>\n            <form id=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} \n                    placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">\n                        Price <br />\n                    </label                    >\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)}\n                     placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {TransactionList} from './components/TransactionList';\nimport {AddTranscation} from './components/AddTranscation';\n\nimport {GlobalProvider} from './context/GlobalState';\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <GlobalProvider >\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTranscation />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}